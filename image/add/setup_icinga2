#!/bin/bash

if [ -z ${POSTGRES_HOST:+x} ]; then 
    echo "=>Icinga2 setup [ERROR]";
    echo "=>Icinga2 PostgreSQL Host not defined";
    exit 1;
fi

if [ -z ${POSTGRES_PASSWORD:+x} ]; then 
    echo "=>Icinga2 setup [ERROR]";
    echo "=>Icinga2 PostgreSQL password not defined";
    exit 1;
fi

ICINGA2_DB_IDO_HOST=${ICINGA2_DB_IDO_HOST:="${POSTGRES_HOST}"}
ICINGA2_DB_IDO_PORT=${ICINGA2_DB_IDO_PORT:=${POSTGRES_PORT}}
ICINGA2_DB_IDO_DATABASE=${ICINGA2_DB_IDO_DATABASE:="icinga_ido"}
ICINGA2_DB_IDO_USER=${ICINGA2_DB_IDO_USER:="icinga_ido"}
ICINGA2_DB_IDO_CHARSET=${ICINGA2_DB_IDO_CHARSET:="latin1"}
ICINGA2_DB_IDO_PERSISTENT=${ICINGA2_DB_IDO_PERSISTENT:=0}
ICINGA2_DB_IDO_USE_SSL=${ICINGA2_DB_IDO_USE_SSL:=0}

if [ -z ${ICINGA2_DB_IDO_PASSWORD:+x} ]; then 
    echo "=>Icinga2 IDO setup [ERROR]";
    echo "=>Icinga2 IDO password not defined";
    exit 1;
fi

PATH_ICINGA2=/etc/icinga2
SRC_ICINGA2=/etc/icinga2.orig

# Copy configuration files 
if [ -z "$(ls -A $PATH_ICINGA2)" ]; then
	echo "=> Copying fresh config-files for /etc/icinga2"
	cp -R $SRC_ICINGA2/* $PATH_ICINGA2/
fi

mkdir -p    /var/log/icinga2/compat/archives               \
            /var/lib/icinga2/api/{zones,log,repository}    \
            /var/cache/icinga2

chown -R nagios:adm /var/log/icinga2
chown -R nagios:nagios /var/lib/icinga2
chown -R nagios:nagios /var/spool/icinga2
chown -R nagios:nagios /var/cache/icinga2
chown -R nagios:root /etc/icinga2

# Create Icinga IDO database
pgsql_create_database                                           \
        ${POSTGRES_HOST}                                        \
        ${POSTGRES_PORT}                                        \
        ${ICINGA2_DB_IDO_DATABASE}                              \
        ${ICINGA2_DB_IDO_CHARSET}                               \
        "/usr/share/icinga2-ido-pgsql/schema/pgsql.sql";

# Create database user for IDO database
pgsql_create_user                                               \
        ${POSTGRES_HOST}                                        \
        ${POSTGRES_PORT}                                        \
        ${ICINGA2_DB_IDO_DATABASE}                              \
        ${ICINGA2_DB_IDO_USER}                                  \
        ${ICINGA2_DB_IDO_PASSWORD}

cat > /etc/icinga2/features-available/ido-pgsql.conf <<-END
library "db_ido_pgsql"

object IdoPgsqlConnection "ido-pgsql" {
user     = "${ICINGA2_DB_IDO_USER}"
password = "${ICINGA2_DB_IDO_PASSWORD}"
host     = "${ICINGA2_DB_IDO_HOST}"
port     =  ${ICINGA2_DB_IDO_PORT}
database = "${ICINGA2_DB_IDO_DATABASE}"
}
END

# enable necessary features
icinga2 feature enable ido-pgsql livestatus compatlog command
# enable modules
icingacli module enable monitoring
icingacli module enable doc

#icinga2 API cert - regenerate new private key and certificate when running in a new container
if [ ! -f "/etc/icinga2/pki/$(hostname).key" ]; then
	icinga2 node setup --master
fi

echo "=>Icinga2 setup [OK]"
